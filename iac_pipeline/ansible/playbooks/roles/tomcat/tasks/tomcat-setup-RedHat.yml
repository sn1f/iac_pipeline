- name: Add EPEL repository
  yum:
    name: epel-release
    state: present

- name: Install basic packages
  package:
    #name: ['vim','bash-completion','tmux','tree','htop','wget','unzip','curl','git']
    name: ['tmux','tree','htop','wget','unzip','curl','git']
    state: present

- name: Install Java 8 CentOS
  yum:
    name: java-1.8.0-openjdk
    state: present

- name: Add tomcat group
  group:
    name: tomcat

- name: Add "tomcat" user
  user:
    name: tomcat
    group: tomcat
    home: /usr/share/tomcat
    createhome: no
    system: yes

- name: Download Tomcat
  get_url:
    url: "{{ tomcat_archive_url }}"
    dest: "{{ tomcat_archive_dest }}"

- name: Create a tomcat directory
  file:
    path: /usr/share/tomcat
    state: directory
    owner: tomcat
    group: tomcat

- name: Extract tomcat archive
  unarchive:
    src: "{{ tomcat_archive_dest }}"
    dest: /usr/share/tomcat
    owner: tomcat
    group: tomcat
    remote_src: yes
    extra_opts: "--strip-components=1"
    creates: /usr/share/tomcat/bin

- name: FINDING THE VALUE OF ANSIBEL SERVUCE MNGR
  debug:
    var: ansible_service_mgr

- name: Create /system/tomcat.service  under  /etc/systemd directory path
  file:
    path: /etc/systemd/system/tomcat.service
    state: directory
    owner: tomcat
    group: tomcat

- name: Copy tomcat service file
  template:
    src: ./roles/tomcat/templates/tomcat.service.j2
    dest: /etc/systemd/system/tomcat.service
  when: ansible_service_mgr == "upstart"

- name: Start and enable tomcat
  service:
    #daemon_reload: yes
    name: tomcat
    pattern: /etc/systemd/system/tomcat.service
    state: started
    #enabled: yes
  register: tomcat_service
  #when: ansible_service_mgr == "upstart"

- name: Start and enable firewalld
  systemd:
    name: firewalld
    state: started
    enabled: yes
  when: tomcat_service.changed
  #when: ansible_service_mgr == "upstart"

- name: Open tomcat port on the firewall
  firewalld:
    port: 8080/tcp
    permanent: true
    state: enabled
    immediate: yes
  #when: ansible_service_mgr == "upstart"
  when: tomcat_service.changed

- name: Set UI access credentials
  template:
    src: tomcat-users.xml.j2
    dest: /usr/share/tomcat/conf/tomcat-users.xml
  notify: restart tomcat

- name: Allow access to Manager and Host Manager apps from any IP
  template:
    src: context.xml.j2 
    dest: "{{ item }}"
  with_items:
    - /usr/share/tomcat/webapps/host-manager/META-INF/context.xml
    - /usr/share/tomcat/webapps/manager/META-INF/context.xml
  notify: restart tomcat

#- name: restart tomcat
#  service:
#    name: tomcat
#    state: restarted ..